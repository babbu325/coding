package tree;

import java.util.Stack;

public class formExpressionTree { 
	public static void main(String[] args) {
		formExpressionTree tr = new formExpressionTree();
		String s = "ab+ef*g*-";
		char[] a = s.toCharArray();
		Node root= tr.makeExpressionTree(a);
		tr.inorder(root);

	}

	private static void inorder(Node root) {
		if(root==null) return;
		inorder(root.l);
		System.out.print(root.d+" ");
		inorder(root.r);
	}

	private static Nodec makeExpressionTree(char[] a) {
		Stack<Node> s = new Stack<Node>();
		for(int i=0; i<a.length ; i++){
			if(!isOperator(a[i])){
				Nodec n1 = new Nodec(a[i]);
				s.push(n1);
			}
			else{
				Nodec n1, n2,n3= new Nodec(a[i]);
				n1 = s.pop();
				n2 = s.pop();
				n3.r = n1;
				n3.l = n2;
				s.push(n3);
			}
		}
		return s.pop();
	}

	private static boolean isOperator(char c) {
		if(c=='+' || c=='-' || c=='*' || c== '*' || c=='^') return true;
		return false;
	}

}
