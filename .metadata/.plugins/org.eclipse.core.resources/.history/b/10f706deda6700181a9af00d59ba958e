package tree;

import java.util.Stack;

public class formExpressionTree { 
	public static void main(String[] args) {
		String s = "ab+ef*g*-";
		char[] a = s.toCharArray();
		Node root= makeExpressionTree(a);
		inorder(root);

	}

	private static void inorder(Node root) {
		if(root==null) return;
		inorder(root.l);
		System.out.println(root.d);
		inorder(root.r);
	}

	private static Node makeExpressionTree(char[] a) {
		Stack<Node> s = new Stack<Node>();
		for(char c: a){
			if(!isOperator(c)){
				Node n1 = new Node(c);
				s.push(n1);
			}
			else{
				Node n1, n2,n3= new Node(c);
				n1 = s.pop();
				n2 = s.pop();
				n3.r = n1;
				n3.l = n2;
				s.push(n3);
			}
		}
		return null;
	}

	private static boolean isOperator(char c) {
		if(c=='+' || c=='-' || c=='*' || c== '*' || c=='^') return true;
		return false;
	}

}
