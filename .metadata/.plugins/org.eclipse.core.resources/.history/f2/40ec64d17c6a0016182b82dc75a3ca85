//http://www.geeksforgeeks.org/dynamic-programming-set-6-min-cost-path/
package dynemicPrograming;

public class shortestpath {

	static int min(int a,int b , int c)
	{
		return Math.min(Math.min(a, b), c);
		
	}
	
	
	static int dp(int[][] mat  )
	{
		for(int i=0;i<3;i++)
			for(int j=0;j<3;j++)
			{
				if(i==0 && j>0)
					mat[i][j]+=mat[i][j-1];
				else if(j==0 && i>0)
					mat[i][j]+=mat[i-1][j];
				else min(mat[i-1][j] , mat[i-1][j-1],  mat[i][j-1]);
				
				
				
			}
		
		return mat[2][2];
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[][] mat=new int[][] { {1,2,3},{4,8,2},{1,5,3} };
		
		int res=dp(mat);
		System.out.println(res);

	}

}
